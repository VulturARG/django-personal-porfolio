version: '3.7'

<<<<<<< HEAD
networks:
  monitor-net:
    driver: bridge
  web:
    external: true

services:
  db_postgres:
    image: postgres:11.5
    networks:
      - monitor-net
=======
services:
  db_postgres:
    image: postgres:11.5
>>>>>>> bd26d0e4e132b5a4273dce28eb270cdf75b62b6d
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: always
  
  django_gunicorn:
    volumes:
      - static:/app/static
<<<<<<< HEAD
      - media:/app/media
=======
>>>>>>> bd26d0e4e132b5a4273dce28eb270cdf75b62b6d
    env_file:
      - .env
    build:
      context: .
    expose: 
      - "8000"
<<<<<<< HEAD
    networks:
      - monitor-net
=======
>>>>>>> bd26d0e4e132b5a4273dce28eb270cdf75b62b6d
    depends_on:
      - db_postgres
    restart: always

  nginx:
    build: ./nginx
    volumes:
      - static:/app/static
<<<<<<< HEAD
      - media:/app/media
    ports:
      - "8000:80"
    networks:
      - web
      - monitor-net
    depends_on:
      - django_gunicorn
    restart: always
    labels:
      - traefik.http.routers.portfolio.rule=Host(`luis.briones.com.ar`)
      - traefik.http.routers.portfolio.tls=true
      - traefik.http.routers.portfolio.tls.certresolver=lets-encrypt
      - traefik.port=8000
volumes:
  static:
  media:
  postgres_data:
=======
    ports:
      - "8000:80"
    depends_on:
      - django_gunicorn
    restart: always

volumes:
  static:
  postgres_data:

>>>>>>> bd26d0e4e132b5a4273dce28eb270cdf75b62b6d
